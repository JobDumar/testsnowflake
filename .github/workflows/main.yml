name: Deploy to Snowflake with schemachange

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      # 1. Descarga el código del repo
      - name: Checkout repository
        uses: actions/checkout@v4

      # 2. Configura Python 3.9
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.9'

      # 3. Instala schemachange y el conector de Snowflake
      - name: Install dependencies
        run: |
          pip install schemachange snowflake-connector-python

      # 4. Crea el archivo connections.toml con credenciales en texto plano
      - name: Create connections.toml
        run: |
          cat <<EOF > connections.toml
[connections.snowflake]
account = "aia76005.east-us-2.azure"
user = "DUMAR"
password = "dfVTkMMXXskFH8w"
role = "ACCOUNTADMIN"
warehouse = "COMPUTE_WH"
database = "SNOWFLAKE_SANDBOX_DB"
schema = "PUBLIC"
EOF
          echo "=== connections.toml content ==="
          cat connections.toml

      # 5. (Opcional) Verifica que la conexión funcione con Python
      - name: Test Snowflake connection
        run: |
          python -c "
          import snowflake.connector
          conn = snowflake.connector.connect(
              user='DUMAR',
              password='dfVTkMMXXskFH8w',
              account='aia76005.east-us-2.azure',
              warehouse='COMPUTE_WH',
              database='SNOWFLAKE_SANDBOX_DB',
              schema='PUBLIC'
          )
          print('✅ Conexión exitosa!')
          conn.close()
          "

      # 6. Verifica que la carpeta 'migrations' exista y muestre su contenido
      - name: Check migrations folder
        run: ls -la migrations || echo "⚠️ 'migrations' folder not found"

      # 7. Ejecuta schemachange para aplicar los scripts de migración
      - name: Run schemachange
        run: |
          schemachange deploy \
            -c connections.toml \
            -f migrations \
            --create-change-history-table
